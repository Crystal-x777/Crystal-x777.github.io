<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/11/29/python%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/"/>
      <url>/2023/11/29/python%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="加密无解"><a href="#加密无解" class="headerlink" title="加密无解"></a>加密无解</h2><p>客户端和终端都加密，再进行配对</p><h3 id="1-MD5加密"><a href="#1-MD5加密" class="headerlink" title="1.MD5加密"></a>1.MD5加密</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import hashlib<br>#  1、加密<br>txt = hashlib.md5(&#x27;密文字符串&#x27;.encode(encoding=&#x27;UTF-8&#x27;)).hexdigest()<br>print(txt)<br># 2、解密<br># 无解<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">结果：499e457fe872851c5169f3935b123708<br></code></pre></td></tr></table></figure><h3 id="2-密码加盐"><a href="#2-密码加盐" class="headerlink" title="2.密码加盐"></a>2.密码加盐</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import hashlib<br><br># 密码加盐:<br>pwd = &#x27;helloworld&#x27;<br><br>h1 = hashlib.md5()<br>h1.update(&#x27;盐1&#x27;.encode(&#x27;utf-8&#x27;))<br>h1.update(pwd.encode(&#x27;utf-8&#x27;))<br>h1.update(&#x27;盐2&#x27;.encode(&#x27;utf-8&#x27;))<br>print(&#x27;md5:&#x27; + h1.hexdigest())<br><br># md5:ab46effd96a4873d6bfe9a465cedbb02<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">md5加盐编码结果:ab46effd96a4873d6bfe9a465cedbb02<br></code></pre></td></tr></table></figure><h3 id="3-sha1加解密"><a href="#3-sha1加解密" class="headerlink" title="3.sha1加解密"></a>3.sha1加解密</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import hashlib<br><br># 1、加密<br>txt = &quot;你好,世界&quot;<br>sha1 = hashlib.sha1()<br>sha1.update(txt.encode(&#x27;utf-8&#x27;))<br>encrypt_txt = sha1.hexdigest()<br>print(&quot;加密的结果：&quot;,encrypt_txt)<br># 2、解密<br># 无解<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">结果：bcb304ffc292603a0865e9ffcf082f6350df67cb<br></code></pre></td></tr></table></figure><h3 id="4-SHA224"><a href="#4-SHA224" class="headerlink" title="4.SHA224"></a>4.SHA224</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import hashlib<br><br>h2 = hashlib.sha224()<br>h2.update(&#x27;helloworld&#x27;.encode(&#x27;utf-8&#x27;))<br>print(&#x27;sha224:&#x27; + h2.hexdigest())<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">sha224编码结果:b033d770602994efa135c5248af300d81567ad5b59cec4bccbf15bcc<br></code></pre></td></tr></table></figure><h3 id="5-SHA256"><a href="#5-SHA256" class="headerlink" title="5.SHA256"></a>5.SHA256</h3><figure class="highlight plaintext"><figcaption><span>hashlib</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs import">import hashlib<br><br>h4 = hashlib.sha256()<br>h4.update(&#x27;helloworld&#x27;.encode(&#x27;utf-8&#x27;))<br>print(&#x27;sha256:&#x27; + h4.hexdigest())<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">sha256编码结果:936a185caaa266bb9cbe981e9e05cb78cd732b0b3280eb944412bb6f8f8f07af<br></code></pre></td></tr></table></figure><h3 id="6-SHA384"><a href="#6-SHA384" class="headerlink" title="6.SHA384"></a>6.SHA384</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import hashlib<br><br>h5 = hashlib.sha384()<br>h5.update(&#x27;helloworld&#x27;.encode(&#x27;utf-8&#x27;))<br>print(&#x27;sha384:&#x27; + h5.hexdigest())<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">sha384编码结果:97982a5b1414b9078103a1c008c4e3526c27b41cdbcf80790560a40f2a9bf2ed4427ab1428789915ed4b3dc07c454bd9<br></code></pre></td></tr></table></figure><h3 id="7-base64加解密"><a href="#7-base64加解密" class="headerlink" title="7.base64加解密"></a>7.base64加解密</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import base64<br><br># 1、加密<br>txt = &quot;你好,世界&quot;<br>encrypt_txt = base64.b64encode(txt.encode(&#x27;utf-8&#x27;))<br>print(&quot;加密的结果：&quot;,encrypt_txt.decode())<br># 2、解密<br>txt = base64.b64decode(encrypt_txt).decode(&quot;utf-8&quot;)<br>print(&quot;解密的结果：&quot;,txt)<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">加密的结果： 5L2g5aW9LOS4lueVjA==<br>解密的结果： 你好,世界<br></code></pre></td></tr></table></figure><h3 id="8-url编解码"><a href="#8-url编解码" class="headerlink" title="8.url编解码"></a>8.url编解码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">from urllib import parse<br><br>txt = &quot;你好世界&quot;<br>url_encode = parse.quote(txt)<br>print(&quot;url编码结果：&quot;,url_encode)<br>url_decode = parse.unquote(url_encode)<br>print(&quot;url解码结果：&quot;,url_decode)<br><br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">url编码结果： %E4%BD%A0%E5%A5%BD%E4%B8%96%E7%95%8C<br>url解码结果： 你好世界<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>试上传音乐</title>
      <link href="/2023/11/24/%E8%AF%95%E4%B8%8A%E4%BC%A0%E9%9F%B3%E4%B9%90/"/>
      <url>/2023/11/24/%E8%AF%95%E4%B8%8A%E4%BC%A0%E9%9F%B3%E4%B9%90/</url>
      
        <content type="html"><![CDATA[<h3 id="试上传音乐："><a href="#试上传音乐：" class="headerlink" title="试上传音乐："></a>试上传音乐：</h3><p>​网易云音乐</p><p>​生成外连播放器</p><p>​复制html代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=500 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=33367876&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;<br></code></pre></td></tr></table></figure><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=500 height=86 src="//music.163.com/outchain/player?type=2&id=33367876&auto=1&height=66"></iframe>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 音乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机械臂制作</title>
      <link href="/2023/11/24/%E6%9C%BA%E6%A2%B0%E8%87%82%E5%88%B6%E4%BD%9C/"/>
      <url>/2023/11/24/%E6%9C%BA%E6%A2%B0%E8%87%82%E5%88%B6%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="SolidWorks软件设计、3D打印、Arduino开发板控制，制作完成第一个小机械臂：Johnny"><a href="#SolidWorks软件设计、3D打印、Arduino开发板控制，制作完成第一个小机械臂：Johnny" class="headerlink" title="SolidWorks软件设计、3D打印、Arduino开发板控制，制作完成第一个小机械臂：Johnny"></a>SolidWorks软件设计、3D打印、Arduino开发板控制，制作完成第一个小机械臂：Johnny</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">#第一种方法（链接为播放链接）<br>&lt;iframe width=&quot;800&quot; height=&quot;500&quot; src=&quot;视频链接&quot;&gt;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">#第二种方法（链接为下载链接）<br>&lt;video width=&quot;800&quot; height=&quot;500&quot; src=&quot;视频链接&quot;&gt;&lt;/video&gt;<br></code></pre></td></tr></table></figure><p><a href="https://crystal-x777.oss-cn-shanghai.aliyuncs.com/img/%E6%9C%BA%E6%A2%B0%E8%87%82%E8%AE%BE%E8%AE%A1%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8B%E8%A7%86%E9%A2%91%28%E7%9F%AD%29.mp4">视频打不开时，点击下载，机械臂制作视频（短版）</a></p><iframe width="800" height="500" src="https://upos-sz-mirrorcos.bilivideo.com/upgcxcode/02/91/1196529102/1196529102-1-16.mp4?e=ig8euxZM2rNcNbRVhwdVhwdlhWdVhwdVhoNvNC8BqJIzNbfq9rVEuxTEnE8L5F6VnEsSTx0vkX8fqJeYTj_lta53NCM=&uipk=5&nbs=1&deadline=1701175851&gen=playurlv2&os=cosbv&oi=0&trid=02c910f805044d398a27d4eb541893c0h&mid=0&platform=html5&upsig=34bbebba693e931001bacf3346d38cdf&uparams=e,uipk,nbs,deadline,gen,os,oi,trid,mid,platform&bvc=vod&nettype=0&f=h_0_0&bw=49233&logo=80000000">]]></content>
      
      
      <categories>
          
          <category> 机械设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机械臂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美化博客工具代码</title>
      <link href="/2023/11/24/%E7%BE%8E%E5%8C%96%E5%8D%9A%E5%AE%A2%E4%BB%A3%E7%A0%81/"/>
      <url>/2023/11/24/%E7%BE%8E%E5%8C%96%E5%8D%9A%E5%AE%A2%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h3 id="1-批量改图片名"><a href="#1-批量改图片名" class="headerlink" title="1.批量改图片名"></a>1.批量改图片名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import os<br>import re<br>#原图路径<br>pic_path= &quot;E:\\Crystal\\themes\\Butterfly\\source\\img\\girl&quot;<br>#新图名字<br>pic_newName=&quot;girl&quot;<br>def pic_rename(pic_path,pic_newName):<br>    piclist=os.listdir(pic_path)<br>    total_num=len(piclist)<br>    i = 0<br>    for pic in piclist:<br>        if pic.endswith(&quot;.png&quot;):  # 修改成你自己想要重命名的文件格式<br>            old_path = os.path.join(os.path.abspath(pic_path), pic)<br>            new_path = os.path.join(os.path.abspath(pic_path),pic_newName+&quot;_&quot;+str(0 + (int(i))) + &#x27;.png&#x27;)  # 修改成了1000+N这种格式<br>            os.renames(old_path, new_path)<br>            print(&quot;原图片命名格式：&quot; + old_path + u&quot;转换为新图片命名格式：&quot; + new_path)<br>            i = i + 1<br>pic_rename(pic_path,pic_newName)<br></code></pre></td></tr></table></figure><hr><h3 id="2-批量裁剪图片"><a href="#2-批量裁剪图片" class="headerlink" title="2.批量裁剪图片"></a>2.批量裁剪图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">from PIL import Image<br>pic_path= &quot;E:\\Crystal\\themes\\Butterfly\\source\\img\\girl&quot;<br>left, upper, right, lower=0,212,827,1039 #potoshop的像素值，右边下面比左边上边大<br>new_image_path=&quot;E:\\Crystal\\themes\\Butterfly\\source\\img&quot;<br>def crop_image(pic_path,left, upper, right, lower, new_image_path):<br>    piclist=os.listdir(pic_path)<br>    i=0<br>    for pic in piclist:<br>        image = Image.open(os.path.join(pic_path,pic))<br>        cropped_image = image.crop((left, upper, right, lower))<br>        print(os.path.join(pic_path,&quot;girl&quot;+str(i)+&quot;.png&quot;))<br>        cropped_image.save(os.path.join(pic_path,&quot;girl&quot;+str(i)+&quot;.png&quot;))<br>        i+=1<br>crop_image(pic_path,left,upper,right,lower,new_image_path)<br></code></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 批量图片处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown语言指令整理</title>
      <link href="/2023/11/22/MarkDown%E8%AF%AD%E8%A8%80%E6%8C%87%E4%BB%A4%E6%95%B4%E7%90%86/"/>
      <url>/2023/11/22/MarkDown%E8%AF%AD%E8%A8%80%E6%8C%87%E4%BB%A4%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><p>1.标题：几个#  空格 文字  ，几级标题，最高到六级</p><hr><p><strong>加粗</strong></p><p>2.加粗：**  文字  **</p><hr><p><em>斜体</em></p><p>3.斜体： *  文字  *</p><hr><p><del>删除线</del></p><p>4.删除线： ~~  文字  ~~</p><hr><p>&#x3D;&#x3D;高亮&#x3D;&#x3D;</p><p>5.高亮：不成功</p><hr><blockquote><p>我是引用文字</p><blockquote><blockquote><p>引用文字</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>引用文字</p></blockquote></blockquote></blockquote></blockquote><p>6.引用：几个&gt; + 文字</p><hr><p>—分割线 、***分割线</p><p>7.分割线：—、*** +文字</p><hr><p><img src="https://crystal-x777.oss-cn-shanghai.aliyuncs.com/img/1.jpg" alt="alt"></p><p>8.图片：! 加 [alt] (图片地址”图片注释”)</p><hr><img src="E:/Crystal/source/_posts/MarkDown%E8%AF%AD%E8%A8%80%E6%8C%87%E4%BB%A4%E6%95%B4%E7%90%86/1.jpg" alt="alt" style="zoom:25%;" /><p>9.缩放图片：右键点击图片，缩放选择20%等。“图片注释”</p><hr><p>[繁星的孩子](<a href="https://crystal-x777.github.io/">繁星的孩子 - 技术知识笔记 (crystal-x777.github.io)</a>)</p><p>10.超链接：[超链接名] (超链接地址)</p><hr><ul><li>无序列表</li></ul><p>11.无序列表： + 空格 文字</p><hr><ol><li>有序列表</li></ol><p>12.有序列表：数字 点 空格 文字</p><hr><p>​子列表</p><p>13.子列表：在文字前按tab</p><hr><table><thead><tr><th>第一列</th><th>第二列</th><th>第三列</th></tr></thead><tbody><tr><td>左</td><td>中</td><td>右</td></tr></tbody></table><p>14.表格:   |第一列| 第二列|第三列|</p><p>​|:—|:—|:—|</p><p>​|左|中|右|</p><hr><p><code>npm install hexo-wordcount --save or yarn add hexo-wordcount</code></p><p>15.插入一行代码：&#96;反引号  文字  反引号 </p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs wordcount:">enable: true<br>post_wordcount: true<br>min2read: true<br>total_wordcount: true<br></code></pre></td></tr></table></figure><p>16.插入多行代码： &#96;&#96;&#96; 三个反引号 多行代码 三个反引号</p>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
